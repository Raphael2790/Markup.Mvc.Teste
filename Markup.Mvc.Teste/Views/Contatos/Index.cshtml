@model IEnumerable<Markup.Models.Teste.Entities.Contato>

@{
    ViewBag.Title = "Index";
}

<h2>Meus contatos</h2>

<p>
    <button id="createNew" class="btn btn-primary">Novo contato</button>
</p>
<table class="table table-striped table-bordered">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Nome)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Telefone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data)
            </td>
            <td>
                <button class="btn btn-warning" onclick="abrirModalParaEditar(@item.Id)">Editar</button>
                <button class="btn btn-danger" onclick="excluirContato(@item.Id)">Deletar</button>
            </td>
        </tr>
    }

</table>

<div class="modal fade" id="contatoModal" tabindex="-1" role="dialog" aria-labelledby="contatoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="contatoModalLabel">Contato</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="form-group">
                    <label for="Nome">Nome</label>
                    <input type="text" id="contatoNome" name="Nome" class="form-control" />
                </div>

                <div class="form-group">
                    <label for="Telefone">Telefone</label>
                    <input type="text" id="contatoTelefone" name="Telefone" class="form-control" />
                </div>

                <input type="hidden" id="contatoId" name="Id" value="" />

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal()">Fechar</button>
                <button type="button" class="btn btn-primary ms-auto" form="contatoForm" onclick="salvarInformacoes()">Salvar</button>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")

<script>
    $(document).ready(function () {
        $('#createNew').click(function () {
            $('#contatoModalLabel').text('Novo contato');
            $('#contatoNome').val('');
            $('#contatoTelefone').val('');
            $('#contatoId').val('');
            $('#contatoModal').modal('show');
        });
    });

    function abrirModalParaEditar(contatoId) {
        $.get('/Contatos/Obter/' + contatoId, function (data) {
            if (data == null || data == undefined) {
                alert('Contato não encontrado!');
                return;
            }

            let contato = data.Dados;

            $('#contatoModalLabel').text('Editar contato');
            $('#contatoNome').val(contato.Nome);
            $('#contatoTelefone').val(contato.Telefone);
            $('#contatoId').val(contato.Id);
            $('#contatoModal').modal('show');
        });
    }

    function excluirContato(contatoId) {
        $.get('/Contatos/Obter/' + contatoId, function (data) {
            if (data == null || data == undefined) {
                alert('Contato não encontrado!');
                return;
            }

            if (!confirm('Deseja realmente excluir este contato "' + data.Dados.Nome + '" ?'))
                return;

            excluirContatoRequest(data.Dados);
        });        
    }

    function closeModal() {
        $('#contatoModal').modal('hide');
    }

    function salvarInformacoes() {
        var contato = obterDadosModal();
        if (contato.Id)
        {
            atualizarContatoRequest(contato);
        }
        else
        {
            criarContatoRequest(contato);
        }
    }

    function obterDadosModal() {
        var contato = {
            Id: $('#contatoId').val(),
            Nome: $('#contatoNome').val(),
            Telefone: $('#contatoTelefone').val()
        };

        return contato;
    }

    function excluirContatoRequest(contato) {
        $.ajax({
            url: '/Contatos/Excluir',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(contato),
            success: function (resultado) {
                processarResultado(resultado);
            },
            error: function (xhr, status, error) {
                alert('Erro ao excluir contato!');
            }
        });
    }

    function atualizarContatoRequest(contato) {
        $.ajax({
            url: '/Contatos/Atualizar',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(contato),
            success: function (resultado) {
                processarResultado(resultado);
            },
            error: function (xhr, status, error) {
                alert('Erro ao atualizar contato!');
            }
        });
    }

    function criarContatoRequest(contato) {
        $.ajax({
            url: '/Contatos/CriarNovo',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(contato),
            success: function (resultado) {
                processarResultado(resultado);
            },
            error: function (xhr, status, error) {
                alert('Erro ao criar contato!');
            }
        });
    }

    function processarResultado(resultado) {
        alert(resultado.Mensagem);
        if (resultado.Sucesso) {
            location.reload();
        }
    }
</script>

